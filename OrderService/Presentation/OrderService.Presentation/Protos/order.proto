syntax = "proto3";

option csharp_namespace = "OrderService.GrpcContracts";

package order;

import "google/protobuf/timestamp.proto";

// Enum representing the order status.
enum OrderStatus {
  CREATED = 0;    // Order is created.
  PAID = 1;       // Order is paid.
  SHIPPED = 2;    // Order is shipped.
  DELIVERED = 3;  // Order is delivered.
  CANCELLED = 4;  // Order is cancelled.
}

// Message representing a single order item.
message OrderItem {
  int32 id = 1;           // Unique identifier for the order item.
  int32 order_id = 2;     // Identifier of the order.
  int32 product_id = 3;   // Identifier of the product.
  double price = 4;       // Price of the product.
  int32 quantity = 5;     // Quantity of the product.
}

// Message representing an order.
message Order {
  int32 id = 1;                         // Unique identifier for the order.
  int32 user_id = 2;                    // Identifier of the user who placed the order.
  OrderStatus status = 3;               // Status of the order.
  google.protobuf.Timestamp created_at = 4; // Order creation timestamp.
  repeated OrderItem items = 5;         // List of order items.
}

// Request message for retrieving an order.
message GetOrderRequest {
  int32 user_id = 1;
}

// Request message for creating a new order.
message CreateOrderRequest {
  int32 user_id = 1;
  repeated OrderItem items = 2; // List of initial order items.
}

// Response message for creating a new order.
message CreateOrderResponse {
  bool success = 1;
  string message = 2;
  int32 order_id = 3; // ID of the created order.
}

// Request message for updating an existing order.
message UpdateOrderRequest {
  Order order = 1; // Updated order data.
}

// Response message for updating an order.
message UpdateOrderResponse {
  bool success = 1; // True if update succeeded.
  string message = 2; // Additional message.
}

// Request message for deleting an order.
message CancelOrderRequest {
  int32 order_id = 1;
}

// Response message for deleting an order.
message CancelOrderResponse {
  bool success = 1; // True if deletion succeeded.
  string message = 2; // Additional message.
}

// Request message for creating a new order.
message AddOrderItemRequest {
  int32 order_id = 1;
  int32 user_id = 2;
  OrderItem order_item = 3;
}

// Response message for creating a new order.
message AddOrderItemResponse {
  bool success = 1;
  string message = 2;
}

// Service definition for Order operations.
service OrderService {
  // Retrieves an order by its ID.
  rpc GetOrder(GetOrderRequest) returns (Order);

  // Creates a new order.
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);

  // Updates an existing order.
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);

  // Deletes an order by its ID.
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);

  rpc AddOrderItem(AddOrderItemRequest) returns (AddOrderItemResponse);
}
